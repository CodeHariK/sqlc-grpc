// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             (unknown)
// source: pguuid/v1/pguuid.proto

package v1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	PguuidService_CreateProduct_FullMethodName              = "/pguuid.v1.PguuidService/CreateProduct"
	PguuidService_CreateProductReturnAll_FullMethodName     = "/pguuid.v1.PguuidService/CreateProductReturnAll"
	PguuidService_CreateProductReturnPartial_FullMethodName = "/pguuid.v1.PguuidService/CreateProductReturnPartial"
	PguuidService_CreateUser_FullMethodName                 = "/pguuid.v1.PguuidService/CreateUser"
	PguuidService_CreateUserReturnAll_FullMethodName        = "/pguuid.v1.PguuidService/CreateUserReturnAll"
	PguuidService_CreateUserReturnPartial_FullMethodName    = "/pguuid.v1.PguuidService/CreateUserReturnPartial"
)

// PguuidServiceClient is the client API for PguuidService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type PguuidServiceClient interface {
	CreateProduct(ctx context.Context, in *CreateProductRequest, opts ...grpc.CallOption) (*CreateProductResponse, error)
	CreateProductReturnAll(ctx context.Context, in *CreateProductReturnAllRequest, opts ...grpc.CallOption) (*CreateProductReturnAllResponse, error)
	CreateProductReturnPartial(ctx context.Context, in *CreateProductReturnPartialRequest, opts ...grpc.CallOption) (*CreateProductReturnPartialResponse, error)
	CreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*CreateUserResponse, error)
	CreateUserReturnAll(ctx context.Context, in *CreateUserReturnAllRequest, opts ...grpc.CallOption) (*CreateUserReturnAllResponse, error)
	CreateUserReturnPartial(ctx context.Context, in *CreateUserReturnPartialRequest, opts ...grpc.CallOption) (*CreateUserReturnPartialResponse, error)
}

type pguuidServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPguuidServiceClient(cc grpc.ClientConnInterface) PguuidServiceClient {
	return &pguuidServiceClient{cc}
}

func (c *pguuidServiceClient) CreateProduct(ctx context.Context, in *CreateProductRequest, opts ...grpc.CallOption) (*CreateProductResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateProductResponse)
	err := c.cc.Invoke(ctx, PguuidService_CreateProduct_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pguuidServiceClient) CreateProductReturnAll(ctx context.Context, in *CreateProductReturnAllRequest, opts ...grpc.CallOption) (*CreateProductReturnAllResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateProductReturnAllResponse)
	err := c.cc.Invoke(ctx, PguuidService_CreateProductReturnAll_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pguuidServiceClient) CreateProductReturnPartial(ctx context.Context, in *CreateProductReturnPartialRequest, opts ...grpc.CallOption) (*CreateProductReturnPartialResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateProductReturnPartialResponse)
	err := c.cc.Invoke(ctx, PguuidService_CreateProductReturnPartial_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pguuidServiceClient) CreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*CreateUserResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateUserResponse)
	err := c.cc.Invoke(ctx, PguuidService_CreateUser_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pguuidServiceClient) CreateUserReturnAll(ctx context.Context, in *CreateUserReturnAllRequest, opts ...grpc.CallOption) (*CreateUserReturnAllResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateUserReturnAllResponse)
	err := c.cc.Invoke(ctx, PguuidService_CreateUserReturnAll_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pguuidServiceClient) CreateUserReturnPartial(ctx context.Context, in *CreateUserReturnPartialRequest, opts ...grpc.CallOption) (*CreateUserReturnPartialResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateUserReturnPartialResponse)
	err := c.cc.Invoke(ctx, PguuidService_CreateUserReturnPartial_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PguuidServiceServer is the server API for PguuidService service.
// All implementations must embed UnimplementedPguuidServiceServer
// for forward compatibility.
type PguuidServiceServer interface {
	CreateProduct(context.Context, *CreateProductRequest) (*CreateProductResponse, error)
	CreateProductReturnAll(context.Context, *CreateProductReturnAllRequest) (*CreateProductReturnAllResponse, error)
	CreateProductReturnPartial(context.Context, *CreateProductReturnPartialRequest) (*CreateProductReturnPartialResponse, error)
	CreateUser(context.Context, *CreateUserRequest) (*CreateUserResponse, error)
	CreateUserReturnAll(context.Context, *CreateUserReturnAllRequest) (*CreateUserReturnAllResponse, error)
	CreateUserReturnPartial(context.Context, *CreateUserReturnPartialRequest) (*CreateUserReturnPartialResponse, error)
	mustEmbedUnimplementedPguuidServiceServer()
}

// UnimplementedPguuidServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedPguuidServiceServer struct{}

func (UnimplementedPguuidServiceServer) CreateProduct(context.Context, *CreateProductRequest) (*CreateProductResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateProduct not implemented")
}
func (UnimplementedPguuidServiceServer) CreateProductReturnAll(context.Context, *CreateProductReturnAllRequest) (*CreateProductReturnAllResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateProductReturnAll not implemented")
}
func (UnimplementedPguuidServiceServer) CreateProductReturnPartial(context.Context, *CreateProductReturnPartialRequest) (*CreateProductReturnPartialResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateProductReturnPartial not implemented")
}
func (UnimplementedPguuidServiceServer) CreateUser(context.Context, *CreateUserRequest) (*CreateUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateUser not implemented")
}
func (UnimplementedPguuidServiceServer) CreateUserReturnAll(context.Context, *CreateUserReturnAllRequest) (*CreateUserReturnAllResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateUserReturnAll not implemented")
}
func (UnimplementedPguuidServiceServer) CreateUserReturnPartial(context.Context, *CreateUserReturnPartialRequest) (*CreateUserReturnPartialResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateUserReturnPartial not implemented")
}
func (UnimplementedPguuidServiceServer) mustEmbedUnimplementedPguuidServiceServer() {}
func (UnimplementedPguuidServiceServer) testEmbeddedByValue()                       {}

// UnsafePguuidServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to PguuidServiceServer will
// result in compilation errors.
type UnsafePguuidServiceServer interface {
	mustEmbedUnimplementedPguuidServiceServer()
}

func RegisterPguuidServiceServer(s grpc.ServiceRegistrar, srv PguuidServiceServer) {
	// If the following call pancis, it indicates UnimplementedPguuidServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&PguuidService_ServiceDesc, srv)
}

func _PguuidService_CreateProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateProductRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PguuidServiceServer).CreateProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: PguuidService_CreateProduct_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PguuidServiceServer).CreateProduct(ctx, req.(*CreateProductRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PguuidService_CreateProductReturnAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateProductReturnAllRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PguuidServiceServer).CreateProductReturnAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: PguuidService_CreateProductReturnAll_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PguuidServiceServer).CreateProductReturnAll(ctx, req.(*CreateProductReturnAllRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PguuidService_CreateProductReturnPartial_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateProductReturnPartialRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PguuidServiceServer).CreateProductReturnPartial(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: PguuidService_CreateProductReturnPartial_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PguuidServiceServer).CreateProductReturnPartial(ctx, req.(*CreateProductReturnPartialRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PguuidService_CreateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PguuidServiceServer).CreateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: PguuidService_CreateUser_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PguuidServiceServer).CreateUser(ctx, req.(*CreateUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PguuidService_CreateUserReturnAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateUserReturnAllRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PguuidServiceServer).CreateUserReturnAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: PguuidService_CreateUserReturnAll_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PguuidServiceServer).CreateUserReturnAll(ctx, req.(*CreateUserReturnAllRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PguuidService_CreateUserReturnPartial_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateUserReturnPartialRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PguuidServiceServer).CreateUserReturnPartial(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: PguuidService_CreateUserReturnPartial_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PguuidServiceServer).CreateUserReturnPartial(ctx, req.(*CreateUserReturnPartialRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// PguuidService_ServiceDesc is the grpc.ServiceDesc for PguuidService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var PguuidService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "pguuid.v1.PguuidService",
	HandlerType: (*PguuidServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateProduct",
			Handler:    _PguuidService_CreateProduct_Handler,
		},
		{
			MethodName: "CreateProductReturnAll",
			Handler:    _PguuidService_CreateProductReturnAll_Handler,
		},
		{
			MethodName: "CreateProductReturnPartial",
			Handler:    _PguuidService_CreateProductReturnPartial_Handler,
		},
		{
			MethodName: "CreateUser",
			Handler:    _PguuidService_CreateUser_Handler,
		},
		{
			MethodName: "CreateUserReturnAll",
			Handler:    _PguuidService_CreateUserReturnAll_Handler,
		},
		{
			MethodName: "CreateUserReturnPartial",
			Handler:    _PguuidService_CreateUserReturnPartial_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pguuid/v1/pguuid.proto",
}
