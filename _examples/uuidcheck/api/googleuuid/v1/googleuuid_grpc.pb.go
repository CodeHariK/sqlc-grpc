// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             (unknown)
// source: googleuuid/v1/googleuuid.proto

package v1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	GoogleuuidService_CreateProduct_FullMethodName              = "/googleuuid.v1.GoogleuuidService/CreateProduct"
	GoogleuuidService_CreateProductReturnAll_FullMethodName     = "/googleuuid.v1.GoogleuuidService/CreateProductReturnAll"
	GoogleuuidService_CreateProductReturnPartial_FullMethodName = "/googleuuid.v1.GoogleuuidService/CreateProductReturnPartial"
	GoogleuuidService_CreateUser_FullMethodName                 = "/googleuuid.v1.GoogleuuidService/CreateUser"
	GoogleuuidService_CreateUserReturnAll_FullMethodName        = "/googleuuid.v1.GoogleuuidService/CreateUserReturnAll"
	GoogleuuidService_CreateUserReturnPartial_FullMethodName    = "/googleuuid.v1.GoogleuuidService/CreateUserReturnPartial"
)

// GoogleuuidServiceClient is the client API for GoogleuuidService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type GoogleuuidServiceClient interface {
	CreateProduct(ctx context.Context, in *CreateProductRequest, opts ...grpc.CallOption) (*CreateProductResponse, error)
	CreateProductReturnAll(ctx context.Context, in *CreateProductReturnAllRequest, opts ...grpc.CallOption) (*CreateProductReturnAllResponse, error)
	CreateProductReturnPartial(ctx context.Context, in *CreateProductReturnPartialRequest, opts ...grpc.CallOption) (*CreateProductReturnPartialResponse, error)
	CreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*CreateUserResponse, error)
	CreateUserReturnAll(ctx context.Context, in *CreateUserReturnAllRequest, opts ...grpc.CallOption) (*CreateUserReturnAllResponse, error)
	CreateUserReturnPartial(ctx context.Context, in *CreateUserReturnPartialRequest, opts ...grpc.CallOption) (*CreateUserReturnPartialResponse, error)
}

type googleuuidServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewGoogleuuidServiceClient(cc grpc.ClientConnInterface) GoogleuuidServiceClient {
	return &googleuuidServiceClient{cc}
}

func (c *googleuuidServiceClient) CreateProduct(ctx context.Context, in *CreateProductRequest, opts ...grpc.CallOption) (*CreateProductResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateProductResponse)
	err := c.cc.Invoke(ctx, GoogleuuidService_CreateProduct_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *googleuuidServiceClient) CreateProductReturnAll(ctx context.Context, in *CreateProductReturnAllRequest, opts ...grpc.CallOption) (*CreateProductReturnAllResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateProductReturnAllResponse)
	err := c.cc.Invoke(ctx, GoogleuuidService_CreateProductReturnAll_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *googleuuidServiceClient) CreateProductReturnPartial(ctx context.Context, in *CreateProductReturnPartialRequest, opts ...grpc.CallOption) (*CreateProductReturnPartialResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateProductReturnPartialResponse)
	err := c.cc.Invoke(ctx, GoogleuuidService_CreateProductReturnPartial_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *googleuuidServiceClient) CreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*CreateUserResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateUserResponse)
	err := c.cc.Invoke(ctx, GoogleuuidService_CreateUser_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *googleuuidServiceClient) CreateUserReturnAll(ctx context.Context, in *CreateUserReturnAllRequest, opts ...grpc.CallOption) (*CreateUserReturnAllResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateUserReturnAllResponse)
	err := c.cc.Invoke(ctx, GoogleuuidService_CreateUserReturnAll_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *googleuuidServiceClient) CreateUserReturnPartial(ctx context.Context, in *CreateUserReturnPartialRequest, opts ...grpc.CallOption) (*CreateUserReturnPartialResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateUserReturnPartialResponse)
	err := c.cc.Invoke(ctx, GoogleuuidService_CreateUserReturnPartial_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GoogleuuidServiceServer is the server API for GoogleuuidService service.
// All implementations must embed UnimplementedGoogleuuidServiceServer
// for forward compatibility.
type GoogleuuidServiceServer interface {
	CreateProduct(context.Context, *CreateProductRequest) (*CreateProductResponse, error)
	CreateProductReturnAll(context.Context, *CreateProductReturnAllRequest) (*CreateProductReturnAllResponse, error)
	CreateProductReturnPartial(context.Context, *CreateProductReturnPartialRequest) (*CreateProductReturnPartialResponse, error)
	CreateUser(context.Context, *CreateUserRequest) (*CreateUserResponse, error)
	CreateUserReturnAll(context.Context, *CreateUserReturnAllRequest) (*CreateUserReturnAllResponse, error)
	CreateUserReturnPartial(context.Context, *CreateUserReturnPartialRequest) (*CreateUserReturnPartialResponse, error)
	mustEmbedUnimplementedGoogleuuidServiceServer()
}

// UnimplementedGoogleuuidServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedGoogleuuidServiceServer struct{}

func (UnimplementedGoogleuuidServiceServer) CreateProduct(context.Context, *CreateProductRequest) (*CreateProductResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateProduct not implemented")
}
func (UnimplementedGoogleuuidServiceServer) CreateProductReturnAll(context.Context, *CreateProductReturnAllRequest) (*CreateProductReturnAllResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateProductReturnAll not implemented")
}
func (UnimplementedGoogleuuidServiceServer) CreateProductReturnPartial(context.Context, *CreateProductReturnPartialRequest) (*CreateProductReturnPartialResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateProductReturnPartial not implemented")
}
func (UnimplementedGoogleuuidServiceServer) CreateUser(context.Context, *CreateUserRequest) (*CreateUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateUser not implemented")
}
func (UnimplementedGoogleuuidServiceServer) CreateUserReturnAll(context.Context, *CreateUserReturnAllRequest) (*CreateUserReturnAllResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateUserReturnAll not implemented")
}
func (UnimplementedGoogleuuidServiceServer) CreateUserReturnPartial(context.Context, *CreateUserReturnPartialRequest) (*CreateUserReturnPartialResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateUserReturnPartial not implemented")
}
func (UnimplementedGoogleuuidServiceServer) mustEmbedUnimplementedGoogleuuidServiceServer() {}
func (UnimplementedGoogleuuidServiceServer) testEmbeddedByValue()                           {}

// UnsafeGoogleuuidServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to GoogleuuidServiceServer will
// result in compilation errors.
type UnsafeGoogleuuidServiceServer interface {
	mustEmbedUnimplementedGoogleuuidServiceServer()
}

func RegisterGoogleuuidServiceServer(s grpc.ServiceRegistrar, srv GoogleuuidServiceServer) {
	// If the following call pancis, it indicates UnimplementedGoogleuuidServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&GoogleuuidService_ServiceDesc, srv)
}

func _GoogleuuidService_CreateProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateProductRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoogleuuidServiceServer).CreateProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: GoogleuuidService_CreateProduct_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoogleuuidServiceServer).CreateProduct(ctx, req.(*CreateProductRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GoogleuuidService_CreateProductReturnAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateProductReturnAllRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoogleuuidServiceServer).CreateProductReturnAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: GoogleuuidService_CreateProductReturnAll_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoogleuuidServiceServer).CreateProductReturnAll(ctx, req.(*CreateProductReturnAllRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GoogleuuidService_CreateProductReturnPartial_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateProductReturnPartialRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoogleuuidServiceServer).CreateProductReturnPartial(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: GoogleuuidService_CreateProductReturnPartial_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoogleuuidServiceServer).CreateProductReturnPartial(ctx, req.(*CreateProductReturnPartialRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GoogleuuidService_CreateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoogleuuidServiceServer).CreateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: GoogleuuidService_CreateUser_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoogleuuidServiceServer).CreateUser(ctx, req.(*CreateUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GoogleuuidService_CreateUserReturnAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateUserReturnAllRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoogleuuidServiceServer).CreateUserReturnAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: GoogleuuidService_CreateUserReturnAll_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoogleuuidServiceServer).CreateUserReturnAll(ctx, req.(*CreateUserReturnAllRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GoogleuuidService_CreateUserReturnPartial_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateUserReturnPartialRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoogleuuidServiceServer).CreateUserReturnPartial(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: GoogleuuidService_CreateUserReturnPartial_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoogleuuidServiceServer).CreateUserReturnPartial(ctx, req.(*CreateUserReturnPartialRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// GoogleuuidService_ServiceDesc is the grpc.ServiceDesc for GoogleuuidService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var GoogleuuidService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "googleuuid.v1.GoogleuuidService",
	HandlerType: (*GoogleuuidServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateProduct",
			Handler:    _GoogleuuidService_CreateProduct_Handler,
		},
		{
			MethodName: "CreateProductReturnAll",
			Handler:    _GoogleuuidService_CreateProductReturnAll_Handler,
		},
		{
			MethodName: "CreateProductReturnPartial",
			Handler:    _GoogleuuidService_CreateProductReturnPartial_Handler,
		},
		{
			MethodName: "CreateUser",
			Handler:    _GoogleuuidService_CreateUser_Handler,
		},
		{
			MethodName: "CreateUserReturnAll",
			Handler:    _GoogleuuidService_CreateUserReturnAll_Handler,
		},
		{
			MethodName: "CreateUserReturnPartial",
			Handler:    _GoogleuuidService_CreateUserReturnPartial_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "googleuuid/v1/googleuuid.proto",
}
